{
  "unpublishedPage": {
    "name": "Dashboard-admin",
    "slug": "dashboard-admin",
    "layouts": [
      {
        "viewMode": false,
        "dsl": {
          "widgetName": "MainContainer",
          "backgroundColor": "none",
          "rightColumn": 4896,
          "snapColumns": 64,
          "detachFromLayout": true,
          "widgetId": "0",
          "topRow": 0,
          "bottomRow": 1140,
          "containerStyle": "none",
          "snapRows": 124,
          "parentRowSpace": 1,
          "type": "CANVAS_WIDGET",
          "canExtend": true,
          "version": 87,
          "minHeight": 1292,
          "dynamicTriggerPathList": [],
          "parentColumnSpace": 1,
          "dynamicBindingPathList": [],
          "leftColumn": 0
        },
        "layoutOnLoadActions": [
          [
            {
              "id": "Dashboard-admin_getOrders",
              "name": "getOrders",
              "confirmBeforeExecute": false,
              "pluginType": "DB",
              "jsonPathKeys": [],
              "timeoutInMillisecond": 20000
            },
            {
              "id": "Dashboard-admin_utils.dashboardMetrics",
              "name": "utils.dashboardMetrics",
              "collectionId": "Dashboard-admin_utils",
              "confirmBeforeExecute": false,
              "pluginType": "JS",
              "jsonPathKeys": [
                "async () => {\n  const orders = await getOrders.run();\n  const returnsCount = await getReturnsCount.run();\n  const allOrders = orders.length;\n  const fulfilledOrders = orders.filter(o => o.status === 'DELIVERED').length;\n  const unfulfilledOrders = orders.filter(o => o.status === 'UNFULFILLED').length;\n  const cancelledOrders = orders.filter(o => o.status === 'CANCELLED').length;\n  const shippedOrders = orders.filter(o => o.status === 'SHIPPED').length;\n  const packedOrders = orders.filter(o => o.status === 'PACKED').length;\n  const totalOrderValue = orders.reduce((a, b) => a + b.total, 0);\n  const formattedOrderValueAmount = totalOrderValue.toLocaleString('en-US', {\n    style: 'currency',\n    currency: 'USD'\n  }).slice(0, -3);\n  return {\n    allOrders,\n    fulfilledOrders,\n    unfulfilledOrders,\n    cancelledOrders,\n    shippedOrders,\n    packedOrders,\n    returnsCount: returnsCount[0].count,\n    totalOrderValue: formattedOrderValueAmount\n  };\n}"
              ],
              "timeoutInMillisecond": 10000
            }
          ],
          [
            {
              "id": "Dashboard-admin_utils.topOrderedProductsChart",
              "name": "utils.topOrderedProductsChart",
              "collectionId": "Dashboard-admin_utils",
              "confirmBeforeExecute": false,
              "pluginType": "JS",
              "jsonPathKeys": [
                "async () => {\n  const orderedProductsCount = await getOrderProductCount.run();\n  var dummyTags = [{\n    \"x\": \"AEP\",\n    \"y\": 11\n  }, {\n    \"x\": \"SHC\",\n    \"y\": 7\n  }, {\n    \"x\": \"AEP Only\",\n    \"y\": 9\n  }, {\n    \"x\": \"No SHC\",\n    \"y\": 6\n  }, {\n    \"x\": \"No Tags\",\n    \"y\": 3\n  }];\n  return dummyTags;\n}"
              ],
              "timeoutInMillisecond": 10000
            }
          ],
          [
            {
              "id": "Dashboard-admin_JSObject.checkLogin",
              "name": "JSObject.checkLogin",
              "collectionId": "Dashboard-admin_JSObject",
              "confirmBeforeExecute": false,
              "pluginType": "JS",
              "jsonPathKeys": [
                "async () => {\n  await is_admin.run().then(data => {\n    if (data == true) {\n      console.log(\"hi\");\n    } else {\n      navigateTo('Login', {});\n    }\n  }).catch(err => {\n    navigateTo('Login', {});\n  });\n}"
              ],
              "timeoutInMillisecond": 10000
            }
          ],
          [
            {
              "id": "Dashboard-admin_utils.revenueChart",
              "name": "utils.revenueChart",
              "collectionId": "Dashboard-admin_utils",
              "confirmBeforeExecute": false,
              "pluginType": "JS",
              "jsonPathKeys": [
                "async () => {\n  const revenueByMonth = await getRevenueByMonth.run();\n  const months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n  return revenueByMonth.map(r => {\n    return {\n      x: months[parseInt(r.month.substring(5)) - 1] + ' ' + r.month.substring(2, 4),\n      y: r.total\n    };\n  });\n}"
              ],
              "timeoutInMillisecond": 10000
            }
          ],
          [
            {
              "id": "Dashboard-admin_utilUsers.dashboardMetrics",
              "name": "utilUsers.dashboardMetrics",
              "collectionId": "Dashboard-admin_utilUsers",
              "confirmBeforeExecute": false,
              "pluginType": "JS",
              "jsonPathKeys": [
                "async () => {\n  const users = await getUserProfiles.run();\n  const currentDate = new Date();\n  const end_date = new Date();\n  end_date.setDate(currentDate.getDate() + 16 * 7);\n  const allUsers = users.filter(o => o.user_type === 'participant').length;\n  console.log(allUsers);\n  const userInvited = users.filter(o => o.status === 'User Invited').length;\n  const usersVerified = users.filter(o => o.status === 'verified').length;\n  const activeUsers = users.filter(o => currentDate >= o.start_date && currentDate < end_date).length;\n  return {\n    users,\n    allUsers,\n    userInvited,\n    usersVerified,\n    activeUsers,\n    currentDate,\n    end_date\n  };\n}"
              ],
              "timeoutInMillisecond": 10000
            }
          ]
        ],
        "layoutOnLoadActionErrors": [],
        "validOnPageLoadActions": true,
        "id": "Dashboard-admin",
        "deleted": false,
        "policies": [],
        "userPermissions": []
      }
    ],
    "userPermissions": [],
    "policies": [],
    "isHidden": false
  },
  "deleted": false,
  "gitSyncId": "646d2b3a65acc62c448ffe7d_6477d2e444540c69ea5d4343"
}